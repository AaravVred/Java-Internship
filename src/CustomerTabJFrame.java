

import java.sql.*;
import javax.swing.table.*;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author aarav
 */
public class CustomerTabJFrame extends javax.swing.JFrame {

    /**
     * Creates new form CustomerMgmtJFrame
     */
    public CustomerTabJFrame() {
        initComponents();
        showData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCustomer = new javax.swing.JLabel();
        textFldCustomer = new javax.swing.JTextField();
        jButtonADD = new javax.swing.JButton();
        lblCountry = new javax.swing.JLabel();
        textFldCountry = new javax.swing.JTextField();
        lblState = new javax.swing.JLabel();
        textFldState = new javax.swing.JTextField();
        lblAddress1 = new javax.swing.JLabel();
        textFldAddress1 = new javax.swing.JTextField();
        lblAddress2 = new javax.swing.JLabel();
        textFldAddress2 = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        textFldCity = new javax.swing.JTextField();
        lblZipCode = new javax.swing.JLabel();
        textFldZipCode = new javax.swing.JTextField();
        jButtonCLEAR = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt = new javax.swing.JTable();
        lblMarket = new javax.swing.JLabel();
        textFldMarket = new javax.swing.JTextField();
        jButtonUPDATE = new javax.swing.JButton();
        jButtonDELETE = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblCustomer.setText("Customer");

        textFldCustomer.setActionCommand("<Not Set>");
        textFldCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFldCustomerActionPerformed(evt);
            }
        });

        jButtonADD.setText("Add");
        jButtonADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonADDActionPerformed(evt);
            }
        });

        lblCountry.setText("Country");

        lblState.setText("State");

        lblAddress1.setText("Address1");

        lblAddress2.setText("Address2");

        lblCity.setText("City");

        lblZipCode.setText("Zip Code");

        textFldZipCode.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jButtonCLEAR.setText("Clear");
        jButtonCLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCLEARActionPerformed(evt);
            }
        });

        jt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer", "Country", "State", "Address1", "Address2", "City", "Zip Code", "Market"
            }
        ));
        jt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jt);

        lblMarket.setText("Market");
        lblMarket.setName(""); // NOI18N

        jButtonUPDATE.setText("Update");
        jButtonUPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUPDATEActionPerformed(evt);
            }
        });

        jButtonDELETE.setText("Delete");
        jButtonDELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDELETEActionPerformed(evt);
            }
        });

        jButtonBack.setText("Back");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCountry)
                            .addComponent(lblCustomer)
                            .addComponent(lblState, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblAddress2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblAddress1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblMarket, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblZipCode, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButtonADD)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonUPDATE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonBack)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonDELETE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textFldMarket)
                                    .addComponent(textFldZipCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                                    .addComponent(textFldCity, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(textFldAddress2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(textFldCountry)
                                    .addComponent(textFldState)
                                    .addComponent(textFldAddress1)
                                    .addComponent(textFldCustomer))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButtonCLEAR)
                                .addGap(41, 41, 41)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jButtonBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFldCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCustomer))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCountry)
                            .addComponent(textFldCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblState)
                            .addComponent(textFldState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress1)
                            .addComponent(textFldAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAddress2)
                            .addComponent(textFldAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCity)
                            .addComponent(textFldCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblZipCode)
                            .addComponent(textFldZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMarket)
                            .addComponent(textFldMarket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCLEAR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonADD)
                    .addComponent(jButtonUPDATE)
                    .addComponent(jButtonDELETE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFldCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFldCustomerActionPerformed
        // TODO add your handling code here:
           

        
    }//GEN-LAST:event_textFldCustomerActionPerformed

    private void jButtonADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonADDActionPerformed
        // TODO add your handling code here:
        
        addData();
        showData();
        //System.out.print(this.jLabelCustomerValue);
         //System.out.print(this.jLabelCustomerValue);
         //showField();
         //this.jLabelCustomerValue2.setText(showField());
         
    }//GEN-LAST:event_jButtonADDActionPerformed

    private void jButtonCLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCLEARActionPerformed
        // TODO add your handling code here:
    clearData();
    
   
    }//GEN-LAST:event_jButtonCLEARActionPerformed

    private void jtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtMouseClicked
        // TODO add your handling code here:
        showTableData();
    }//GEN-LAST:event_jtMouseClicked

    private void jButtonUPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUPDATEActionPerformed
        // TODO add your handling code here:
        updateData();
        showData();
    }//GEN-LAST:event_jButtonUPDATEActionPerformed

    private void jButtonDELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDELETEActionPerformed
        // TODO add your handling code here:
        deleteData();
        showData();
        clearData();
    }//GEN-LAST:event_jButtonDELETEActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new HomePage().setVisible(true);
    }//GEN-LAST:event_jButtonBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerTabJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerTabJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerTabJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerTabJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerTabJFrame().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonADD;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonCLEAR;
    private javax.swing.JButton jButtonDELETE;
    private javax.swing.JButton jButtonUPDATE;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jt;
    private javax.swing.JLabel lblAddress1;
    private javax.swing.JLabel lblAddress2;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblCustomer;
    private javax.swing.JLabel lblMarket;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblZipCode;
    private javax.swing.JTextField textFldAddress1;
    private javax.swing.JTextField textFldAddress2;
    private javax.swing.JTextField textFldCity;
    private javax.swing.JTextField textFldCountry;
    private javax.swing.JTextField textFldCustomer;
    private javax.swing.JTextField textFldMarket;
    private javax.swing.JTextField textFldState;
    private javax.swing.JTextField textFldZipCode;
    // End of variables declaration//GEN-END:variables
   /*
    this method addData() takes in the new user inputed data in the text fields and
    inserts it into the mysql database, creating a new row.
    */
    public void addData() {
        String customerName = textFldCustomer.getText();    //*declare and initialize customer variables
    String country = textFldCountry.getText();          // and store text fields user inputs
    String state = textFldState.getText();
    String address1 = textFldAddress1.getText();
    String address2 = textFldAddress2.getText();
    String city = textFldCity.getText();
        String zipCode = textFldZipCode.getText();
        String market = textFldMarket.getText();
        
        
         try  (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/salesreporting","root","Tulip");  
        Statement stmt=con.createStatement();)
  { 
       
       String sql = "insert into customers(customer_name, country, state, addr1, addr2, city, zipcode, market)values('"+customerName+"', '"+country+"', '"+state+"', '"+address1+"', '"+address2+"', '"+city+"', '"+zipCode+"', '"+market+"')";
               
        stmt.executeUpdate(sql);
        //con.commit();
        con.close();
        if(con != null) {
            System.out.println("Connection established and tabl created.");
        }
            }
         
  catch(Exception ex) {
      System.out.println("Connection unsuccessful");
      ex.printStackTrace();
  }
         
        
       /*System.out.println("Customer:" + customerName);  //*print out the outputs
       System.out.println("Country:" + country);
       System.out.println("State:" + state);
       System.out.println("Address1:" + address1);
       System.out.println("Address2:" + address2);
       System.out.println("City:" + city);
       System.out.println("Zip Code:" + zipCode);
       System.out.println("Market:" + market);*/

   }
   
   /*
   thiS method gets the data from the mysql database and puts it in the jtable.
   */
   
     public void showData() { 
   
    
       try  
  { 
        //Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/salesreporting","root","Tulip");  
        //Statement stmt=con.createStatement(); 
        
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/salesreporting","root","Tulip");  
        Statement stmt=con.createStatement();
       String sql = "select * from customers order by customer_no desc";
        ResultSet rs = stmt.executeQuery(sql);
        DefaultTableModel  model = (DefaultTableModel)jt.getModel();
        model.setRowCount(0);
        while(rs.next()) {
            
            /*System.out.println("customer" + " " + rs.getString(2));
            System.out.println("country" + " " + rs.getString(3));
            System.out.println("state" + " " + rs.getString(4));
            System.out.println("address1" + " " + rs.getString(5));
            System.out.println("address2" + " " + rs.getString(6));
            System.out.println("city" + " " + rs.getString(7));
            System.out.println("Zip Code" + " " + rs.getString(8));*/
            String customerName = rs.getString(2);  
            String country = rs.getString(3);
            String state = rs.getString(4);
            String address1 = rs.getString(5);
            String address2 = rs.getString(6);
            String city = rs.getString(7);
            String zipCode = rs.getString(8);
            String market = rs.getString(9);
            model.addRow(new Object[]{customerName, country, state, address1, address2, city, zipCode, market});
            //String[] data = {customerName, country, state, address1, address2, city, zipCode};
            
            
        }
        
        con.close();
        
        if(con != null) {
            System.out.println("Connection established and table created.");
        }
            } 
  catch(Exception ex) {
      System.out.println("Connection unsuccessful");
      ex.printStackTrace();
      
  }
}
     /*This method showTableData() gets the table data from the selected row, and
        inputs it into the text fields so the user can see the data they selected.
     */     
     public void showTableData() {  
     DefaultTableModel  model2 = (DefaultTableModel)jt.getModel();
    int row = jt.getSelectedRow();

    //int col = 0; // ID is the first Column
    textFldCustomer.setText(jt.getValueAt( row, 0 ).toString());
    textFldCountry.setText(jt.getValueAt( row, 1 ).toString());
    textFldState.setText(jt.getValueAt( row, 2 ).toString());
    textFldAddress1.setText(jt.getValueAt( row, 3 ).toString());
    textFldAddress2.setText(jt.getValueAt( row, 4 ).toString());
    textFldCity.setText(jt.getValueAt( row, 5 ).toString());
    textFldZipCode.setText(jt.getValueAt( row, 6 ).toString());
    textFldMarket.setText(jt.getValueAt( row, 7 ).toString());
         
     }
     /*
     this method updateData() updates the mysql database by setting each column
     equal to the user input in the text fields, but only where the customer name
     has a value, because each customer name must be unique and this is needed 
     for the method to work.
     */
     public void updateData() {
         
 try  (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/salesreporting","root","Tulip");  
        Statement stmt=con.createStatement();)
  { 
       
       String sql = "update customers set country = '"+textFldCountry.getText()+"',state = '"+textFldState.getText()+"', addr1 = '"+textFldAddress1.getText()+"', addr2 = '"+textFldAddress2.getText()+"', city = '"+textFldCity.getText()+"', zipcode = '"+textFldZipCode.getText()+"', market = '"+textFldMarket.getText()+"' where customer_name = '"+textFldCustomer.getText()+"'  ";
               
        stmt.executeUpdate(sql);
        //con.commit();
       // con.close();
        
            }
         
  catch(Exception ex) {
      System.out.println("Connection unsuccessful");
      ex.printStackTrace();
  }     
     }
     /*
     this method deleteData() deletes the user selected row from the mySql database
     by highlighting the customer text field because it is unique.
     */
     public void deleteData() {
    try  (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/salesreporting","root","Tulip");  
        Statement stmt=con.createStatement();)
  { 
       
       String sql = "delete from customers where customer_name = '"+textFldCustomer.getText()+"'";
               
        stmt.executeUpdate(sql);
        //con.commit();
       // con.close();
        
            }
         
  catch(Exception ex) {
      System.out.println("Connection unsuccessful");
      ex.printStackTrace();
  } 
}
     public void clearData() {
    textFldCustomer.setText(null);  
    textFldCountry.setText(null);
    textFldState.setText(null);
    textFldAddress1.setText(null);
    textFldAddress2.setText(null);
    textFldCity.setText(null);
    textFldZipCode.setText(null);
    textFldMarket.setText(null);
     }
}

